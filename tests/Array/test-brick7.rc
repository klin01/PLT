Array int $vertices;
Brick $b1;
Brick $b;

function $retBrickArray : ()
{
	Array Brick $retArray;
	int $i;
	int $j;
	int $k;

	$vertices : new Array int;
	$vertices[0] : 1;
	$vertices[1] : 2;
	$vertices[2] : 3;
	$vertices[3] : 4;
	$j : -1;
	$k : 0;

	$retArray : new Array Brick;


	for ($i : 0; $i < 20; $i +: 1){
		if (($i % 5) = 0) {
			$j *: -1;
		}
		$k +: $j;
		$b1 : new Brick (0,0,0, $vertices, $i, $k);
		$retArray[$i] : $b1;
	}
	return $retArray;
}

function $main : ()
{	
	Array Brick $brickArray;
	int $i; int $total;
	$total : 20;

	$brickArray: $retBrickArray();

	$printstring("printing returned array of bricks");
	for ($i : 0; $i < $total; $i +: 1) {
		$b : $brickArray[$i];
		$printstring("Printing Block: ");
		$printint($b.$colorR);
		$printint($b.$colorG);
		$printint($b.$colorB);
		$printint($b.$vertices[0]);
		$printint($b.$vertices[1]);
		$printint($b.$vertices[2]);
		$printint($b.$vertices[3]);
		$printint($b.$x);
		$printint($b.$y);
	}

}
