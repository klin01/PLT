Array int $playervertices;

function $generateThis : Array Brick ()
{
	Array Brick $retArray;
	Array int $brickvs;
	int $boundingsize;
	int $vertex_c;
	int $i; int $j;
	int $num_bricks;

	$retArray : new Array Brick;
	$boundingsize : 30;
	$vertex_c : 5;
	$num_bricks = 5;

	for ($j : 0; $j < $num_bricks; $j +: 1) {
		for ($i : 0; $i < $vertex_c; $i +: 1) {
			$brickvs[$i*2] : $GenerateRandomInt($boundingsize);
			$brickvs[$i*2+1] : $GenerateRandomInt($boundingsize);
		}

	}

	$vertices : new Array int;
	$vertices[0] : 0;
	$vertices[1] : 0;
	$vertices[2] : 10;
	$vertices[3] : 10;
	$j : -1;
	$k : 0;

	$retArray : new Array Brick;


	for ($i : 0; $i < 20; $i +: 1){
		if (($i % 5) = 0) {
			$j *: -1;
		}
		$k +: $j;
		$b1 : new Brick (0,0,0, $vertices, $i, $k);
		$retArray[$i] : $b1;
	}
	return $retArray;
}

function $buildPlayerVertices : void ($vertices)
{
	int $i;
	int $j;

	$j : 30; //bounding box of 30 x 30
	for ($i: 0; $i < 6; $i +: 1) {
		$Push($vertices, $GenerateRandomInt($j)));
		$Push($vertices, $GenerateRandomInt($j)));
	}
}

function $main : void ()
{	
	Map $m;
	Player $player;

	$player : new Player(0,0,0, $vertices, 500);
	$m : new Map(1000, 1000, $generator);

	$buildPlayerVertices($playervertices);
	$Run($m, $player);

}
